// Values substituted for zero bits in unvoiced consonant samples.
// tab48426
export const sampledConsonantValues0 = [0x18, 0x1a, 0x17, 0x17, 0x17];

export const stressPitch_tab47492 = [
  0x00, 0xe0, 0xe6, 0xec, 0xf3, 0xf9, 0x00, 0x06, 0xc, 0x06,
];

// Used to decide which phoneme's blend lengths. The candidate with the lower score is selected.
// tab45856
export const blendRank = [
  0x00, 0x1f, 0x1f, 0x1f, 0x1f, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
  0x02, 0x05, 0x05, 0x02, 0x0a, 0x02, 0x08, 0x05, 0x05, 0x0b, 0x0a, 0x09, 0x08,
  0x08, 0xa0, 0x08, 0x08, 0x17, 0x1f, 0x12, 0x12, 0x12, 0x12, 0x1e, 0x1e, 0x14,
  0x14, 0x14, 0x14, 0x17, 0x17, 0x1a, 0x1a, 0x1d, 0x1d, 0x02, 0x02, 0x02, 0x02,
  0x02, 0x02, 0x1a, 0x1d, 0x1b, 0x1a, 0x1d, 0x1b, 0x1a, 0x1d, 0x1b, 0x1a, 0x1d,
  0x1b, 0x17, 0x1d, 0x17, 0x17, 0x1d, 0x17, 0x17, 0x1d, 0x17, 0x17, 0x1d, 0x17,
  0x17, 0x17,
];

// Number of frames at the end of a phoneme devoted to interpolating to next phoneme's final value
//tab45696
export const outBlendLength = [
  0x00, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x02, 0x04, 0x04, 0x02, 0x02, 0x02, 0x02,
  0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02,
  0x02, 0x02, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x05, 0x05, 0x05, 0x05,
  0x04, 0x04, 0x02, 0x00, 0x01, 0x02, 0x00, 0x01, 0x02, 0x00, 0x01, 0x02, 0x00,
  0x01, 0x02, 0x00, 0x02, 0x02, 0x00, 0x01, 0x03, 0x00, 0x02, 0x03, 0x00, 0x02,
  0xa0, 0xa0,
];

// Number of frames at beginning of a phoneme devoted to interpolating to phoneme's final value
// tab45776
export const inBlendLength = [
  0x00, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
  0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x01, 0x02, 0x03, 0x02, 0x01, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x03,
  0x03, 0x03, 0x02, 0x02, 0x03, 0x02, 0x03, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05,
  0x04, 0x04, 0x02, 0x00, 0x02, 0x02, 0x00, 0x03, 0x02, 0x00, 0x04, 0x02, 0x00,
  0x03, 0x02, 0x00, 0x02, 0x02, 0x00, 0x02, 0x03, 0x00, 0x03, 0x03, 0x00, 0x03,
  0xb0, 0xa0,
];

// Consists of two bitfields:
// Low 3 bits (masked by 7) select a 256-byte section in sampleTable,
// as well as index into sampledConsonantValues0 for unvoiced.
// High 5 bits (masked by 248 = 11111000), for unvoiced,
// give inverted offset within the 256-byte section.
//
// 32: S*    241         11110001
// 33: SH    226         11100010
// 34: F*    211         11010011
// 35: TH    187         10111011
// 36: /H    124         01111100
// 37: /X    149         10010101
// 38: Z*    1           00000001
// 39: ZH    2           00000010
// 40: V*    3           00000011
// 41: DH    3           00000011
// 43: CH'   114         01110010
// 45: J'    2           00000010
// 67: P'    27          00011011
// 70: T'    25          00011001
// tab45936
export const sampledConsonantFlags = [
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf1, 0xe2, 0xd3, 0xbb, 0x7c, 0x95, 0x01,
  0x02, 0x03, 0x03, 0x00, 0x72, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1b, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00,
];

//
export const frequencyData = [
  //tab45056 |tab451356 |tab45216
  //  freq1  |  freq2   |  freq3
  0x000000 | 0x000000 | 0x000000, // ' *' 00
  0x000013 | 0x004300 | 0x5b0000, // '.*' 01
  0x000013 | 0x004300 | 0x5b0000, // '?*' 02
  0x000013 | 0x004300 | 0x5b0000, // ',*' 03
  0x000013 | 0x004300 | 0x5b0000, // '-*' 04
  0x00000a | 0x005400 | 0x6e0000, // 'IY' 05
  0x00000e | 0x004800 | 0x5d0000, // 'IH' 06
  0x000012 | 0x004200 | 0x5b0000, // 'EH' 07
  0x000018 | 0x003e00 | 0x580000, // 'AE' 08
  0x00001a | 0x002800 | 0x590000, // 'AA' 09
  0x000016 | 0x002c00 | 0x570000, // 'AH' 10
  0x000014 | 0x001e00 | 0x580000, // 'AO' 11
  0x000010 | 0x002400 | 0x520000, // 'UH' 12
  0x000014 | 0x002c00 | 0x590000, // 'AX' 13
  0x00000e | 0x004800 | 0x5d0000, // 'IX' 14
  0x000012 | 0x003000 | 0x3e0000, // 'ER' 15
  0x00000e | 0x002400 | 0x520000, // 'UX' 16
  0x000012 | 0x001e00 | 0x580000, // 'OH' 17
  0x000012 | 0x003200 | 0x3e0000, // 'RX' 18
  0x000010 | 0x002400 | 0x6e0000, // 'LX' 19
  0x00000c | 0x001c00 | 0x500000, // 'WX' 20
  0x00000e | 0x004400 | 0x5d0000, // 'YX' 21
  0x00000a | 0x001800 | 0x5a0000, // 'WH' 22
  0x000012 | 0x003200 | 0x3c0000, // 'R*' 23
  0x00000e | 0x001e00 | 0x6e0000, // 'L*' 24
  0x00000a | 0x001800 | 0x5a0000, // 'W*' 25
  0x000008 | 0x005200 | 0x6e0000, // 'Y*' 26
  0x000006 | 0x002e00 | 0x510000, // 'M*' 27
  0x000006 | 0x003600 | 0x790000, // 'N*' 28
  0x000006 | 0x005600 | 0x650000, // 'NX' 29
  0x000006 | 0x003600 | 0x790000, // 'DX' 30
  0x000011 | 0x004300 | 0x5b0000, // 'Q*' 31
  0x000006 | 0x004900 | 0x630000, // 'S*' 32
  0x000006 | 0x004f00 | 0x6a0000, // 'SH' 33
  0x000006 | 0x001a00 | 0x510000, // 'F*' 34
  0x000006 | 0x004200 | 0x790000, // 'TH' 35
  0x00000e | 0x004900 | 0x5d0000, // '/H' 36
  0x000010 | 0x002500 | 0x520000, // '/X' 37
  0x000009 | 0x003300 | 0x5d0000, // 'Z*' 38
  0x00000a | 0x004200 | 0x670000, // 'ZH' 39
  0x000008 | 0x002800 | 0x4c0000, // 'V*' 40
  0x00000a | 0x002f00 | 0x5d0000, // 'DH' 41
  0x000006 | 0x004f00 | 0x650000, // 'CH' 42
  0x000006 | 0x004f00 | 0x650000, // '**' 43
  0x000006 | 0x004200 | 0x790000, // 'J*' 44
  0x000005 | 0x004f00 | 0x650000, // '**' 45
  0x000006 | 0x006e00 | 0x790000, // '**' 46
  0x000000 | 0x000000 | 0x000000, // '**' 47
  0x000012 | 0x004800 | 0x5a0000, // 'EY' 48
  0x00001a | 0x002600 | 0x580000, // 'AY' 49
  0x000014 | 0x001e00 | 0x580000, // 'OY' 50
  0x00001a | 0x002a00 | 0x580000, // 'AW' 51
  0x000012 | 0x001e00 | 0x580000, // 'OW' 52
  0x00000c | 0x002200 | 0x520000, // 'UW' 53
  0x000006 | 0x001a00 | 0x510000, // 'B*' 54
  0x000006 | 0x001a00 | 0x510000, // '**' 55
  0x000006 | 0x001a00 | 0x510000, // '**' 56
  0x000006 | 0x004200 | 0x790000, // 'D*' 57
  0x000006 | 0x004200 | 0x790000, // '**' 58
  0x000006 | 0x004200 | 0x790000, // '**' 59
  0x000006 | 0x006e00 | 0x700000, // 'G*' 60
  0x000006 | 0x006e00 | 0x6e0000, // '**' 61
  0x000006 | 0x006e00 | 0x6e0000, // '**' 62
  0x000006 | 0x005400 | 0x5e0000, // 'GX' 63
  0x000006 | 0x005400 | 0x5e0000, // '**' 64
  0x000006 | 0x005400 | 0x5e0000, // '**' 65
  0x000006 | 0x001a00 | 0x510000, // 'P*' 66
  0x000006 | 0x001a00 | 0x510000, // '**' 67
  0x000006 | 0x001a00 | 0x510000, // '**' 68
  0x000006 | 0x004200 | 0x790000, // 'T*' 69
  0x000006 | 0x004200 | 0x790000, // '**' 70
  0x000006 | 0x004200 | 0x790000, // '**' 71
  0x000006 | 0x006d00 | 0x650000, // 'K*' 72
  0x00000a | 0x005600 | 0x650000, // '**' 73
  0x00000a | 0x006d00 | 0x700000, // '**' 74
  0x000006 | 0x005400 | 0x5e0000, // 'KX' 75
  0x000006 | 0x005400 | 0x5e0000, // '**' 76
  0x000006 | 0x005400 | 0x5e0000, // '**' 77
  0x00002c | 0x007f00 | 0x080000, // 'UL' 78
  0x000013 | 0x007f00 | 0x010000, // 'UM' 79
];

/**
 *
 * ampl1data[X] =  ampldata[X]        & 0xFF; // F1 amplitude
 * ampl2data[X] = (ampldata[X] >> 8)  & 0xFF; // F2 amplitude
 * ampl3data[X] = (ampldata[X] >> 16) & 0xFF; // F3 amplitude
 */
export const ampldata = [
  // ampl1   | ampl2    | ampl3
  0x000000 | 0x000000 | 0x000000, // ' *' 00
  0x000000 | 0x000000 | 0x000000, // '.*' 01
  0x000000 | 0x000000 | 0x000000, // '?*' 02
  0x000000 | 0x000000 | 0x000000, // ',*' 03
  0x000000 | 0x000000 | 0x000000, // '-*' 04
  0x00000d | 0x000a00 | 0x080000, // 'IY' 05
  0x00000d | 0x000b00 | 0x070000, // 'IH' 06
  0x00000e | 0x000d00 | 0x080000, // 'EH' 07
  0x00000f | 0x000e00 | 0x080000, // 'AE' 08
  0x00000f | 0x000d00 | 0x010000, // 'AA' 09
  0x00000f | 0x000c00 | 0x010000, // 'AH' 10
  0x00000f | 0x000c00 | 0x000000, // 'AO' 11
  0x00000f | 0x000b00 | 0x010000, // 'UH' 12
  0x00000c | 0x000900 | 0x000000, // 'AX' 13
  0x00000d | 0x000b00 | 0x070000, // 'IX' 14
  0x00000c | 0x000b00 | 0x050000, // 'ER' 15
  0x00000f | 0x000c00 | 0x010000, // 'UX' 16
  0x00000f | 0x000c00 | 0x000000, // 'OH' 17
  0x00000d | 0x000c00 | 0x060000, // 'RX' 18
  0x00000d | 0x000800 | 0x010000, // 'LX' 19
  0x00000d | 0x000800 | 0x000000, // 'WX' 20
  0x00000e | 0x000c00 | 0x070000, // 'YX' 21
  0x00000d | 0x000800 | 0x000000, // 'WH' 22
  0x00000c | 0x000a00 | 0x050000, // 'R*' 23
  0x00000d | 0x000800 | 0x010000, // 'L*' 24
  0x00000d | 0x000800 | 0x000000, // 'W*' 25
  0x00000d | 0x000a00 | 0x080000, // 'Y*' 26
  0x00000c | 0x000300 | 0x000000, // 'M*' 27
  0x000009 | 0x000900 | 0x000000, // 'N*' 28
  0x000009 | 0x000600 | 0x030000, // 'NX' 29
  0x000000 | 0x000000 | 0x000000, // 'DX' 30
  0x000000 | 0x000000 | 0x000000, // 'Q*' 31
  0x000000 | 0x000000 | 0x000000, // 'S*' 32
  0x000000 | 0x000000 | 0x000000, // 'SH' 33
  0x000000 | 0x000000 | 0x000000, // 'F*' 34
  0x000000 | 0x000000 | 0x000000, // 'TH' 35
  0x000000 | 0x000000 | 0x000000, // '/H' 36
  0x000000 | 0x000000 | 0x000000, // '/X' 37
  0x00000b | 0x000300 | 0x000000, // 'Z*' 38
  0x00000b | 0x000500 | 0x010000, // 'ZH' 39
  0x00000b | 0x000300 | 0x000000, // 'V*' 40
  0x00000b | 0x000400 | 0x000000, // 'DH' 41
  0x000000 | 0x000000 | 0x000000, // 'CH' 42
  0x000000 | 0x000000 | 0x000000, // '**' 43
  0x000001 | 0x000000 | 0x000000, // 'J*' 44
  0x00000b | 0x000500 | 0x010000, // '**' 45
  0x000000 | 0x000a00 | 0x0e0000, // '**' 46
  0x000002 | 0x000200 | 0x010000, // '**' 47
  0x00000e | 0x000e00 | 0x090000, // 'EY' 48
  0x00000f | 0x000d00 | 0x010000, // 'AY' 49
  0x00000f | 0x000c00 | 0x000000, // 'OY' 50
  0x00000f | 0x000d00 | 0x010000, // 'AW' 51
  0x00000f | 0x000c00 | 0x000000, // 'OW' 52
  0x00000d | 0x000800 | 0x000000, // 'UW' 53
  0x000002 | 0x000000 | 0x000000, // 'B*' 54
  0x000004 | 0x000100 | 0x000000, // '**' 55
  0x000000 | 0x000000 | 0x000000, // '**' 56
  0x000002 | 0x000000 | 0x000000, // 'D*' 57
  0x000004 | 0x000100 | 0x000000, // '**' 58
  0x000000 | 0x000000 | 0x000000, // '**' 59
  0x000001 | 0x000000 | 0x000000, // 'G*' 60
  0x000004 | 0x000100 | 0x000000, // '**' 61
  0x000000 | 0x000000 | 0x000000, // '**' 62
  0x000001 | 0x000000 | 0x000000, // 'GX' 63
  0x000004 | 0x000100 | 0x000000, // '**' 64
  0x000000 | 0x000000 | 0x000000, // '**' 65
  0x000000 | 0x000000 | 0x000000, // 'P*' 66
  0x000000 | 0x000000 | 0x000000, // '**' 67
  0x000000 | 0x000000 | 0x000000, // '**' 68
  0x000000 | 0x000000 | 0x000000, // 'T*' 69
  0x000000 | 0x000000 | 0x000000, // '**' 70
  0x000000 | 0x000000 | 0x000000, // '**' 71
  0x000000 | 0x000000 | 0x000000, // 'K*' 72
  0x00000c | 0x000a00 | 0x070000, // '**' 73
  0x000000 | 0x000000 | 0x000000, // '**' 74
  0x000000 | 0x000000 | 0x000000, // 'KX' 75
  0x000000 | 0x000a00 | 0x050000, // '**' 76
  0x000000 | 0x000000 | 0x000000, // '**' 77
  0x00000f | 0x000000 | 0x130000, // 'UL' 78
  0x00000f | 0x000000 | 0x100000, // 'UM' 79
];

// Sampled data for consonants, consisting of five 256-byte sections
export const sampleTable = [
  //00  T', S, Z  (coronal)
  0x38, 0x84, 0x6b, 0x19, 0xc6, 0x63, 0x18, 0x86, 0x73, 0x98, 0xc6, 0xb1, 0x1c,
  0xca, 0x31, 0x8c, 0xc7, 0x31, 0x88, 0xc2, 0x30, 0x98, 0x46, 0x31, 0x18, 0xc6,
  0x35, 0x0c, 0xca, 0x31, 0x0c, 0xc6,
  //20
  0x21, 0x10, 0x24, 0x69, 0x12, 0xc2, 0x31, 0x14, 0xc4, 0x71, 0x08, 0x4a, 0x22,
  0x49, 0xab, 0x6a, 0xa8, 0xac, 0x49, 0x51, 0x32, 0xd5, 0x52, 0x88, 0x93, 0x6c,
  0x94, 0x22, 0x15, 0x54, 0xd2, 0x25,
  //40
  0x96, 0xd4, 0x50, 0xa5, 0x46, 0x21, 0x08, 0x85, 0x6b, 0x18, 0xc4, 0x63, 0x10,
  0xce, 0x6b, 0x18, 0x8c, 0x71, 0x19, 0x8c, 0x63, 0x35, 0x0c, 0xc6, 0x33, 0x99,
  0xcc, 0x6c, 0xb5, 0x4e, 0xa2, 0x99,
  //60
  0x46, 0x21, 0x28, 0x82, 0x95, 0x2e, 0xe3, 0x30, 0x9c, 0xc5, 0x30, 0x9c, 0xa2,
  0xb1, 0x9c, 0x67, 0x31, 0x88, 0x66, 0x59, 0x2c, 0x53, 0x18, 0x84, 0x67, 0x50,
  0xca, 0xe3, 0x0a, 0xac, 0xab, 0x30,
  //80
  0xac, 0x62, 0x30, 0x8c, 0x63, 0x10, 0x94, 0x62, 0xb1, 0x8c, 0x82, 0x28, 0x96,
  0x33, 0x98, 0xd6, 0xb5, 0x4c, 0x62, 0x29, 0xa5, 0x4a, 0xb5, 0x9c, 0xc6, 0x31,
  0x14, 0xd6, 0x38, 0x9c, 0x4b, 0xb4,
  //A0
  0x86, 0x65, 0x18, 0xae, 0x67, 0x1c, 0xa6, 0x63, 0x19, 0x96, 0x23, 0x19, 0x84,
  0x13, 0x08, 0xa6, 0x52, 0xac, 0xca, 0x22, 0x89, 0x6e, 0xab, 0x19, 0x8c, 0x62,
  0x34, 0xc4, 0x62, 0x19, 0x86, 0x63,
  //C0
  0x18, 0xc4, 0x23, 0x58, 0xd6, 0xa3, 0x50, 0x42, 0x54, 0x4a, 0xad, 0x4a, 0x25,
  0x11, 0x6b, 0x64, 0x89, 0x4a, 0x63, 0x39, 0x8a, 0x23, 0x31, 0x2a, 0xea, 0xa2,
  0xa9, 0x44, 0xc5, 0x12, 0xcd, 0x42,
  //E0
  0x34, 0x8c, 0x62, 0x18, 0x8c, 0x63, 0x11, 0x48, 0x66, 0x31, 0x9d, 0x44, 0x33,
  0x1d, 0x46, 0x31, 0x9c, 0xc6, 0xb1, 0x0c, 0xcd, 0x32, 0x88, 0xc4, 0x73, 0x18,
  0x86, 0x73, 0x08, 0xd6, 0x63, 0x58,
  //100 CH', J', SH, ZH  (palato-alveolar)
  0x07, 0x81, 0xe0, 0xf0, 0x3c, 0x07, 0x87, 0x90, 0x3c, 0x7c, 0x0f, 0xc7, 0xc0,
  0xc0, 0xf0, 0x7c, 0x1e, 0x07, 0x80, 0x80, 0x00, 0x1c, 0x78, 0x70, 0xf1, 0xc7,
  0x1f, 0xc0, 0x0c, 0xfe, 0x1c, 0x1f,
  //120
  0x1f, 0x0e, 0x0a, 0x7a, 0xc0, 0x71, 0xf2, 0x83, 0x8f, 0x03, 0x0f, 0x0f, 0x0c,
  0x00, 0x79, 0xf8, 0x61, 0xe0, 0x43, 0x0f, 0x83, 0xe7, 0x18, 0xf9, 0xc1, 0x13,
  0xda, 0xe9, 0x63, 0x8f, 0x0f, 0x83,
  //140
  0x83, 0x87, 0xc3, 0x1f, 0x3c, 0x70, 0xf0, 0xe1, 0xe1, 0xe3, 0x87, 0xb8, 0x71,
  0x0e, 0x20, 0xe3, 0x8d, 0x48, 0x78, 0x1c, 0x93, 0x87, 0x30, 0xe1, 0xc1, 0xc1,
  0xe4, 0x78, 0x21, 0x83, 0x83, 0xc3,
  //160
  0x87, 0x06, 0x39, 0xe5, 0xc3, 0x87, 0x07, 0x0e, 0x1c, 0x1c, 0x70, 0xf4, 0x71,
  0x9c, 0x60, 0x36, 0x32, 0xc3, 0x1e, 0x3c, 0xf3, 0x8f, 0x0e, 0x3c, 0x70, 0xe3,
  0xc7, 0x8f, 0x0f, 0x0f, 0x0e, 0x3c,
  //180
  0x78, 0xf0, 0xe3, 0x87, 0x06, 0xf0, 0xe3, 0x07, 0xc1, 0x99, 0x87, 0x0f, 0x18,
  0x78, 0x70, 0x70, 0xfc, 0xf3, 0x10, 0xb1, 0x8c, 0x8c, 0x31, 0x7c, 0x70, 0xe1,
  0x86, 0x3c, 0x64, 0x6c, 0xb0, 0xe1,
  //1A0
  0xe3, 0x0f, 0x23, 0x8f, 0x0f, 0x1e, 0x3e, 0x38, 0x3c, 0x38, 0x7b, 0x8f, 0x07,
  0x0e, 0x3c, 0xf4, 0x17, 0x1e, 0x3c, 0x78, 0xf2, 0x9e, 0x72, 0x49, 0xe3, 0x25,
  0x36, 0x38, 0x58, 0x39, 0xe2, 0xde,
  //1C0
  0x3c, 0x78, 0x78, 0xe1, 0xc7, 0x61, 0xe1, 0xe1, 0xb0, 0xf0, 0xf0, 0xc3, 0xc7,
  0x0e, 0x38, 0xc0, 0xf0, 0xce, 0x73, 0x73, 0x18, 0x34, 0xb0, 0xe1, 0xc7, 0x8e,
  0x1c, 0x3c, 0xf8, 0x38, 0xf0, 0xe1,
  //1E0
  0xc1, 0x8b, 0x86, 0x8f, 0x1c, 0x78, 0x70, 0xf0, 0x78, 0xac, 0xb1, 0x8f, 0x39,
  0x31, 0xdb, 0x38, 0x61, 0xc3, 0x0e, 0x0e, 0x38, 0x78, 0x73, 0x17, 0x1e, 0x39,
  0x1e, 0x38, 0x64, 0xe1, 0xf1, 0xc1,
  //200 P', F, V, TH, DH  ([labio]dental)
  0x4e, 0x0f, 0x40, 0xa2, 0x02, 0xc5, 0x8f, 0x81, 0xa1, 0xfc, 0x12, 0x08, 0x64,
  0xe0, 0x3c, 0x22, 0xe0, 0x45, 0x07, 0x8e, 0x0c, 0x32, 0x90, 0xf0, 0x1f, 0x20,
  0x49, 0xe0, 0xf8, 0x0c, 0x60, 0xf0,
  //220
  0x17, 0x1a, 0x41, 0xaa, 0xa4, 0xd0, 0x8d, 0x12, 0x82, 0x1e, 0x1e, 0x03, 0xf8,
  0x3e, 0x03, 0x0c, 0x73, 0x80, 0x70, 0x44, 0x26, 0x03, 0x24, 0xe1, 0x3e, 0x04,
  0x4e, 0x04, 0x1c, 0xc1, 0x09, 0xcc,
  //240
  0x9e, 0x90, 0x21, 0x07, 0x90, 0x43, 0x64, 0xc0, 0x0f, 0xc6, 0x90, 0x9c, 0xc1,
  0x5b, 0x03, 0xe2, 0x1d, 0x81, 0xe0, 0x5e, 0x1d, 0x03, 0x84, 0xb8, 0x2c, 0x0f,
  0x80, 0xb1, 0x83, 0xe0, 0x30, 0x41,
  //260
  0x1e, 0x43, 0x89, 0x83, 0x50, 0xfc, 0x24, 0x2e, 0x13, 0x83, 0xf1, 0x7c, 0x4c,
  0x2c, 0xc9, 0x0d, 0x83, 0xb0, 0xb5, 0x82, 0xe4, 0xe8, 0x06, 0x9c, 0x07, 0xa0,
  0x99, 0x1d, 0x07, 0x3e, 0x82, 0x8f,
  //280
  0x70, 0x30, 0x74, 0x40, 0xca, 0x10, 0xe4, 0xe8, 0x0f, 0x92, 0x14, 0x3f, 0x06,
  0xf8, 0x84, 0x88, 0x43, 0x81, 0x0a, 0x34, 0x39, 0x41, 0xc6, 0xe3, 0x1c, 0x47,
  0x03, 0xb0, 0xb8, 0x13, 0x0a, 0xc2,
  //2A0
  0x64, 0xf8, 0x18, 0xf9, 0x60, 0xb3, 0xc0, 0x65, 0x20, 0x60, 0xa6, 0x8c, 0xc3,
  0x81, 0x20, 0x30, 0x26, 0x1e, 0x1c, 0x38, 0xd3, 0x01, 0xb0, 0x26, 0x40, 0xf4,
  0x0b, 0xc3, 0x42, 0x1f, 0x85, 0x32,
  //2C0
  0x26, 0x60, 0x40, 0xc9, 0xcb, 0x01, 0xec, 0x11, 0x28, 0x40, 0xfa, 0x04, 0x34,
  0xe0, 0x70, 0x4c, 0x8c, 0x1d, 0x07, 0x69, 0x03, 0x16, 0xc8, 0x04, 0x23, 0xe8,
  0xc6, 0x9a, 0x0b, 0x1a, 0x03, 0xe0,
  //2E0
  0x76, 0x06, 0x05, 0xcf, 0x1e, 0xbc, 0x58, 0x31, 0x71, 0x66, 0x00, 0xf8, 0x3f,
  0x04, 0xfc, 0x0c, 0x74, 0x27, 0x8a, 0x80, 0x71, 0xc2, 0x3a, 0x26, 0x06, 0xc0,
  0x1f, 0x05, 0x0f, 0x98, 0x40, 0xae,
  //300 /H  (palatal)
  0x01, 0x7f, 0xc0, 0x07, 0xff, 0x00, 0x0e, 0xfe, 0x00, 0x03, 0xdf, 0x80, 0x03,
  0xef, 0x80, 0x1b, 0xf1, 0xc2, 0x00, 0xe7, 0xe0, 0x18, 0xfc, 0xe0, 0x21, 0xfc,
  0x80, 0x3c, 0xfc, 0x40, 0x0e, 0x7e,
  //320
  0x00, 0x3f, 0x3e, 0x00, 0x0f, 0xfe, 0x00, 0x1f, 0xff, 0x00, 0x3e, 0xf0, 0x07,
  0xfc, 0x00, 0x7e, 0x10, 0x3f, 0xff, 0x00, 0x3f, 0x38, 0x0e, 0x7c, 0x01, 0x87,
  0x0c, 0xfc, 0xc7, 0x00, 0x3e, 0x04,
  //340
  0x0f, 0x3e, 0x1f, 0x0f, 0x0f, 0x1f, 0x0f, 0x02, 0x83, 0x87, 0xcf, 0x03, 0x87,
  0x0f, 0x3f, 0xc0, 0x07, 0x9e, 0x60, 0x3f, 0xc0, 0x03, 0xfe, 0x00, 0x3f, 0xe0,
  0x77, 0xe1, 0xc0, 0xfe, 0xe0, 0xc3,
  //360
  0xe0, 0x01, 0xdf, 0xf8, 0x03, 0x07, 0x00, 0x7e, 0x70, 0x00, 0x7c, 0x38, 0x18,
  0xfe, 0x0c, 0x1e, 0x78, 0x1c, 0x7c, 0x3e, 0x0e, 0x1f, 0x1e, 0x1e, 0x3e, 0x00,
  0x7f, 0x83, 0x07, 0xdb, 0x87, 0x83,
  //380
  0x07, 0xc7, 0x07, 0x10, 0x71, 0xff, 0x00, 0x3f, 0xe2, 0x01, 0xe0, 0xc1, 0xc3,
  0xe1, 0x00, 0x7f, 0xc0, 0x05, 0xf0, 0x20, 0xf8, 0xf0, 0x70, 0xfe, 0x78, 0x79,
  0xf8, 0x02, 0x3f, 0x0c, 0x8f, 0x03,
  //3a0
  0x0f, 0x9f, 0xe0, 0xc1, 0xc7, 0x87, 0x03, 0xc3, 0xc3, 0xb0, 0xe1, 0xe1, 0xc1,
  0xe3, 0xe0, 0x71, 0xf0, 0x00, 0xfc, 0x70, 0x7c, 0x0c, 0x3e, 0x38, 0x0e, 0x1c,
  0x70, 0xc3, 0xc7, 0x03, 0x81, 0xc1,
  //3c0
  0xc7, 0xe7, 0x00, 0x0f, 0xc7, 0x87, 0x19, 0x09, 0xef, 0xc4, 0x33, 0xe0, 0xc1,
  0xfc, 0xf8, 0x70, 0xf0, 0x78, 0xf8, 0xf0, 0x61, 0xc7, 0x00, 0x1f, 0xf8, 0x01,
  0x7c, 0xf8, 0xf0, 0x78, 0x70, 0x3c,
  //3e0
  0x7c, 0xce, 0x0e, 0x21, 0x83, 0xcf, 0x08, 0x07, 0x8f, 0x08, 0xc1, 0x87, 0x8f,
  0x80, 0xc7, 0xe3, 0x00, 0x07, 0xf8, 0xe0, 0xef, 0x00, 0x39, 0xf7, 0x80, 0x0e,
  0xf8, 0xe1, 0xe3, 0xf8, 0x21, 0x9f,
  //400 /X  (glottal)
  0xc0, 0xff, 0x03, 0xf8, 0x07, 0xc0, 0x1f, 0xf8, 0xc4, 0x04, 0xfc, 0xc4, 0xc1,
  0xbc, 0x87, 0xf0, 0x0f, 0xc0, 0x7f, 0x05, 0xe0, 0x25, 0xec, 0xc0, 0x3e, 0x84,
  0x47, 0xf0, 0x8e, 0x03, 0xf8, 0x03,
  //420
  0xfb, 0xc0, 0x19, 0xf8, 0x07, 0x9c, 0x0c, 0x17, 0xf8, 0x07, 0xe0, 0x1f, 0xa1,
  0xfc, 0x0f, 0xfc, 0x01, 0xf0, 0x3f, 0x00, 0xfe, 0x03, 0xf0, 0x1f, 0x00, 0xfd,
  0x00, 0xff, 0x88, 0x0d, 0xf9, 0x01,
  //440
  0xff, 0x00, 0x70, 0x07, 0xc0, 0x3e, 0x42, 0xf3, 0x0d, 0xc4, 0x7f, 0x80, 0xfc,
  0x07, 0xf0, 0x5e, 0xc0, 0x3f, 0x00, 0x78, 0x3f, 0x81, 0xff, 0x01, 0xf8, 0x01,
  0xc3, 0xe8, 0x0c, 0xe4, 0x64, 0x8f,
  //460
  0xe4, 0x0f, 0xf0, 0x07, 0xf0, 0xc2, 0x1f, 0x00, 0x7f, 0xc0, 0x6f, 0x80, 0x7e,
  0x03, 0xf8, 0x07, 0xf0, 0x3f, 0xc0, 0x78, 0x0f, 0x82, 0x07, 0xfe, 0x22, 0x77,
  0x70, 0x02, 0x76, 0x03, 0xfe, 0x00,
  //480
  0xfe, 0x67, 0x00, 0x7c, 0xc7, 0xf1, 0x8e, 0xc6, 0x3b, 0xe0, 0x3f, 0x84, 0xf3,
  0x19, 0xd8, 0x03, 0x99, 0xfc, 0x09, 0xb8, 0x0f, 0xf8, 0x00, 0x9d, 0x24, 0x61,
  0xf9, 0x0d, 0x00, 0xfd, 0x03, 0xf0,
  //4a0
  0x1f, 0x90, 0x3f, 0x01, 0xf8, 0x1f, 0xd0, 0x0f, 0xf8, 0x37, 0x01, 0xf8, 0x07,
  0xf0, 0x0f, 0xc0, 0x3f, 0x00, 0xfe, 0x03, 0xf8, 0x0f, 0xc0, 0x3f, 0x00, 0xfa,
  0x03, 0xf0, 0x0f, 0x80, 0xff, 0x01,
  //4c0
  0xb8, 0x07, 0xf0, 0x01, 0xfc, 0x01, 0xbc, 0x80, 0x13, 0x1e, 0x00, 0x7f, 0xe1,
  0x40, 0x7f, 0xa0, 0x7f, 0xb0, 0x00, 0x3f, 0xc0, 0x1f, 0xc0, 0x38, 0x0f, 0xf0,
  0x1f, 0x80, 0xff, 0x01, 0xfc, 0x03,
  //4e0
  0xf1, 0x7e, 0x01, 0xfe, 0x01, 0xf0, 0xff, 0x00, 0x7f, 0xc0, 0x1d, 0x07, 0xf0,
  0x0f, 0xc0, 0x7e, 0x06, 0xe0, 0x07, 0xe0, 0x0f, 0xf8, 0x06, 0xc1, 0xfe, 0x01,
  0xfc, 0x03, 0xe0, 0x0f, 0x00, 0xfc,
];
